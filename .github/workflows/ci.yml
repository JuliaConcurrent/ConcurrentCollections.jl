name: CI

on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version:
          - '1'
          - 'nightly'
        nthreads: ['1', '2']
        assertion: ['false']
        include:
          - julia-version: '1'
            nthreads: '2'
            assertion: 'true'
      fail-fast: false
    name: Test Julia ${{ matrix.julia-version }} nthreads=${{ matrix.nthreads }} assertion=${{ matrix.assertion }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
      # Use `JULIA_PKG_SERVER` mitigation implemented in julia-buildpkg:
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          JULIA_NUM_THREADS: ${{ matrix.nthreads }}
          CONCURRENTCOLLECTIONS_JL_ASSERTION: ${{ matrix.assertion }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella

  documenter:
    runs-on: ubuntu-latest
    env:
      GKSwstype: "nul"
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: nightly
      # Use `JULIA_PKG_SERVER` mitigation implemented in julia-buildpkg:
      - uses: julia-actions/julia-buildpkg@v1
      - name: Install Run.jl
        run: julia -e 'using Pkg; pkg"add Run@0.1"'
      - name: Install dependencies
        run: julia -e 'using Run; Run.prepare_docs()'
      - name: Build and deploy
        id: build-and-deploy
        if: |
          github.event_name == 'push' || (
            github.event_name == 'pull_request' &&
            !contains(github.head_ref, 'create-pull-request/')
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.SSH_KEY }}
        run: julia -e 'using Run; Run.docs()'
      - name: Just build
        if: steps.build-and-deploy.outcome == 'skipped'
        run: julia -e 'using Run; Run.docs()'


  # https://github.com/tkf/julia-code-style-suggesters
  code-style:
    if: always() && github.event.pull_request
    runs-on: ubuntu-latest
    steps:
      - uses: tkf/julia-code-style-suggesters@v1

  # A job that succeeds if and only if all jobs in `test` succeed.
  all-success:
    if: always() && github.event.pull_request
    needs: [test, documenter, code-style]
    runs-on: ubuntu-latest
    steps:
      # https://github.com/tkf/merge-conclusions-action
      - uses: tkf/merge-conclusions-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
